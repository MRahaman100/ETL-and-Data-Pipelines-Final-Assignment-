from datetime import timedelta
from airflow.models import DAG
from airflow.operators.bash_operator import BashOperator
from airflow.operators.python import PythonOperator
from airflow.operators.email import EmailOperator

default_args = {
    'owner': 'Michael',
    'start_date': days_ago(0),
    'email': ['youremail@somemail.com'],
    'email_on_failure' : True,
    'email_on_retry' : True,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
}

dag = DAG(
    dag_id='ETL_toll_data',
    default_args=default_args,
    description='Apache Airflow Final Assignment',
    schedule_interval=timedelta(days=1),
)

unzip_data = BashOperator(
    task_id='unzip_data',
    bash_command='tar -xzf /home/project/airflow/dags/finalassignment/tolldata.tgz',
    dag=dag,
)

extract_data_from_csv = BashOperator(
    task_id='extract_data_from_csv',
    bash_command='cut -d"," -f1-4 /home/project/airflow/dags/finalassignment/vehicle-date.csv > \
    /home/project/airflow/finalassignment/csv_data.csv',
    dag=dag
)

# Task 1.5 - Create a task to extract data from tsv file
extract_data_from_tsv = BashOperator(
    task_id='extract_data_from_tsv',  
    bash_command='cut -d"," -f5-7 /home/project/airflow/dags/finalassignment/tollplaza-date.tsv > \
    /home/project/airflow/finalassignment/tsv_data.csv',
    dag=dag,
)

# Create a task to extract data from fixed width file
extract_data_from_fixed_width = BashOperator(
    task_id='extract_data_from_fixed_width',  
    bash_command='cut -c59-67 /home/project/airflow/dags/finalassignment/payment-date.txt > \
        |tr " " "," > \
    /home/project/airflow/finalassignment/fixed_width_data.csv',
    dag=dag,
)

# Create a task to consolidate data extracted from previous tasks
consolidate_data = BashOperator(
    task_id='consolidate_data',  
    bash_command='paste /home/project/airflow/dags/finalassignment/csv_data.csv \
    /home/project/airflow/dags/finalassignment/tsv_data.csv \
    /home/project/airflow/dags/finalassignment/fixed_width_data.csv \
    > extracted_data.csv',
    dag=dag,
)

# Transform and load the data
transform_data = BashOperator(
    task_id='transform_data',  
    bash_command='tr '[:lower:]' '[:upper:]' < extracted_data.csv > transformed_data.csv',
    dag=dag,
)

# Define the task pipeline
unzip_data >> extract_data_from_csv >> extract_data_from_tsv >> extract_data_from_fixed_width >> consolidate_data >> transform_data
